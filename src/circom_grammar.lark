start: all_statements

all_statements: statement_list

statement_list: 
    | statement_list statement
    | statement

statement: function_definition_statement
     | template_definition_statement
     | if_statement
     | for_statement
     | while_statement
     | do_while_statement
     | return_statement
     | block
     | expression_statement
     | include_statement

function_definition_statement: "function" IDENTIFIER "(" identifier_list ")" block
    | "function" IDENTIFIER "(" ")" block
template_definition_statement: "template" IDENTIFIER "(" identifier_list ")" block
    | "template" IDENTIFIER "(" ")" block
identifier_list: identifier_list "," IDENTIFIER
    | IDENTIFIER
if_statement:  "if" "(" expression ")" statement "else" statement
    | "if" "(" expression ")" statement
for_statement: "for" "(" expression ";" expression ";" expression ")" statement
while_statement: "while" "(" expression ")" statement
do_while_statement: "do" statement "while" "(" expression ")"
return_statement: "return" expression ";"
include_statement: "include" STRING ";"
block: "{" statement_list "}"
expression_statement: expression ";"

expression: e17

e17:left_hand_expression "=" e17
    | left_hand_expression "+=" e17
    | left_hand_expression "-=" e17
    | left_hand_expression "*=" e17
    | left_hand_expression "/=" e17
    | left_hand_expression "%=" e17
    | left_hand_expression "<<=" e17
    | left_hand_expression ">>=" e17
    | left_hand_expression "&=" e17
    | left_hand_expression "|=" e17
    | left_hand_expression "^=" e17
    | left_hand_expression "<==" e17
    | e17 "==>" left_hand_expression
    | left_hand_expression "<--" e17
    | e17 "-->" left_hand_expression
    | e16 "===" e17
    | e17 "?" e17 ":" e17
    | e16

e16: right_array
    | e15

e15: e15 "||" e14
    | e14

e14: e14 "&&" e13
    | e13 
e13: e13 "|" e12
    | e12
e12: e12 "^" e11
    | e11

e11: e11 "&" e10
    | e10
e10: e10 "==" e9
    | e10 "!=" e9
    | e9
e9: e9 "<=" e7
    | e9 ">=" e7
    | e9 "<" e7
    | e9 ">" e7
    | e7
e7: e7 "<<" e6
    | e7 ">>" e6
    | e6
e6: e6 "+" e5
    | e6 "-" e5
    | e5
e5: e5 "*" e4
    | e5 "/" e4
    | e5 "\\" e4
    | e5 "%" e4
    | e4
e4: e4 "**" e3
    | e3
e3: "++" left_hand_expression
    | "--" left_hand_expression
    | "+" e3
    | "-" e3
    | "!" e3
    | "~" e3
    | e2
e2: left_hand_expression "++" 
    | left_hand_expression "--"
    | function_call
    | e0 
e0: left_hand_expression
    | DECNUMBER
    | HEXNUMBER
    | "(" expression ")"
left_hand_expression: simple_left_hand_expression "." simple_left_hand_expression
    | declaration
    | simple_left_hand_expression
declaration: "var" simple_left_hand_expression
    | "signal" simple_left_hand_expression
    | "signal" "input" simple_left_hand_expression
    | "signal" "private" "input" simple_left_hand_expression
    | "signal" "output" simple_left_hand_expression
    | "component" simple_left_hand_expression
simple_left_hand_expression: simple_left_hand_expression array
    | IDENTIFIER
function_call: IDENTIFIER "(" expression_list ")"
    | IDENTIFIER "(" ")"
expression_list: expression_list "," expression
    | expression ","
right_array: array
array: "[" expression_list "]"

IDENTIFIER: /[a-zA-Z][a-zA-Z$_0-9]*/
STRING: /\"[^"]+\"/ 
DECNUMBER: /[0-9]+/
HEXNUMBER: /0x[0-9A-Fa-f]*/
%import common.WS
%ignore WS
